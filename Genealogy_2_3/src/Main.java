import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª—é–¥–µ–π
        List<Person> people = new ArrayList<>();

        // –†–æ–¥–∏—Ç–µ–ª–∏
        Person father = new Person("Alojzy", "Czeremcha", LocalDate.of(1903,12,7));
        Person mother = new Person("Janina", "Czeremcha", LocalDate.of(1908,5,22));

        // –î–µ—Ç–∏
        Person child1 = new Person("Gra≈ºyna", "Duda", LocalDate.of(1951,4,7));
        Person child2 = new Person("Ksawery", "Czeremcha", LocalDate.of(1955,8,12));
        Person child3 = new Person("Brajan", "Czeremcha", LocalDate.of(1959,2,18));
        Person child4 = new Person("D≈ºesika", "Mercedes", LocalDate.of(2000,7,11));

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ—Ö –≤ —Å–ø–∏—Å–æ–∫
        people.add(father);
        people.add(mother);
        people.add(child1);
        people.add(child2);
        people.add(child3);
        people.add(child4);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏: —É—Å—ã–Ω–æ–≤–ª–µ–Ω–∏–µ
        father.adopt(child1);
        father.adopt(child2);
        father.adopt(child3);
        father.adopt(child4);

        mother.adopt(child1);
        mother.adopt(child2);
        mother.adopt(child3);
        mother.adopt(child4);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Ç—å –∏ –æ—Ç—Ü–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±—ë–Ω–∫–∞
        for (Person child : List.of(child1, child2, child3, child4)) {
            child.setFather(father);
            child.setMother(mother);
        }

        // –í—ã–≤–æ–¥ –¥–µ—Ç–µ–π –æ—Ç—Ü–∞
        System.out.println("üë®‚Äçüëß –î–µ—Ç–∏ " + father.getFname() + ":");
        for (Person child : father.getChildren()) {
            System.out.println("- " + child.getFname() + " " + child.getLname());
        }

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è
        System.out.println("\nüìÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è:");
        List<Person> sorted = Person.sortPeopleByBirthYear(people);
        for (Person p : sorted) {
            System.out.println(p.getFname() + " " + p.getLname() + " - " + p.getBirthDate());
        }

        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–ª—é—á—É "Czeremcha"
        System.out.println("\nüîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ 'Czeremcha':");
        List<Person> filtered = Person.filterList(people, "Czeremcha");
        for (Person p : filtered) {
            System.out.println(p.getFname() + " " + p.getLname());
        }

        // UML-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è
        System.out.println("\nüìê UML:");
        String uml = Person.toUMLFile(people);
        System.out.println(uml);

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
        String binaryPath = "family_data.bin";
        Person.saveToBinaryFile(people, binaryPath);
        System.out.println("\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: " + binaryPath);

        // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞
        List<Person> loadedPeople = Person.readFromBinaryFile(binaryPath);
        System.out.println("üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ —Ñ–∞–π–ª–∞:");
        for (Person p : loadedPeople) {
            System.out.println(p.getFname() + " " + p.getLname());
        }
    }
}
